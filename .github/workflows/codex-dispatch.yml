name: Dispatch Codex on Ready
on:
  issues:
    types: [labeled, opened, edited]
permissions:
  contents: write
  pull-requests: write
  issues: write
jobs:
  open-draft-pr-and-summon:
    if: contains(github.event.issue.labels.*.name, 'codex:ready')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Prepare branch and sentinel commit
        env:
          ISSUE_NUM: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_BRANCH: ${{ github.event.repository.default_branch }}
        run: |
          set -euo pipefail
          BRANCH="codex/issue-${ISSUE_NUM}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -B "$BRANCH" "origin/${BASE_BRANCH}"
          mkdir -p .codex/tasks
          cat > ".codex/tasks/issue-${ISSUE_NUM}.md" <<'EOF'
          # Codex Task Bootstrap
          ## Issue
          ${{ github.event.issue.html_url }}
          ## Title
          ${{ github.event.issue.title }}
          ## Body
          ${{ github.event.issue.body }}
          ## Notes
          - Use the issue body as spec.
          - Respect any path allowlist and branch hints.
          EOF
          git add .codex/tasks/issue-${ISSUE_NUM}.md
          git commit -m "chore: codex bootstrap for issue #${ISSUE_NUM}"
          git push --force-with-lease --set-upstream origin "$BRANCH"
          # Try to create a draft PR; if forbidden by org policy, fall back to issue comment with manual instructions.
          set +e
          CREATE_OUT=$(gh pr create \
            --repo "$REPO" \
            --base "${BASE_BRANCH}" \
            --head "$BRANCH" \
            --draft \
            --title "Codex: Issue #${ISSUE_NUM} â€” ${ISSUE_TITLE}" \
            --body $'Closes #${ISSUE_NUM}\n\nBootstrap PR for Codex Cloud. See `.codex/tasks/issue-'"${ISSUE_NUM}"'.md` for the spec snapshot.' 2>&1)
          STATUS=$?
          set -e
          if [ $STATUS -eq 0 ]; then
            # gh pr create output may include extra lines; extract a URL if present, else resolve via head branch
            PR_URL=$(echo "$CREATE_OUT" | grep -Eo 'https://github.com/[^ ]+/pull/[0-9]+' | tail -n1 || true)
            if [ -z "$PR_URL" ]; then
              PR_URL=$(gh pr list --repo "$REPO" --head "$BRANCH" --json url --jq '.[0].url' 2>/dev/null || true)
            fi
            if [ -n "$PR_URL" ]; then
              echo "PR_URL=$PR_URL" >> "$GITHUB_ENV"
            else
              echo "PR_URL=" >> "$GITHUB_ENV"
              gh issue comment "$ISSUE_NUM" --body $'PR likely created but URL not captured. Please open the PR for `codex/issue-'"${ISSUE_NUM}"'` into `'$BASE_BRANCH'` and comment `@codex review`.'
            fi
          else
            echo "PR_URL=" >> "$GITHUB_ENV"
            gh issue comment "$ISSUE_NUM" --body $'Could not auto-create PR (likely org policy). Branch created: `codex/issue-'"${ISSUE_NUM}"'`.\n\nPlease open a PR from that branch into `'$BASE_BRANCH'` and comment `@codex review` on the PR.'
          fi
      - name: Summon Codex on the PR
        if: ${{ env.PR_URL != '' }}
        env:
          PR_URL: ${{ env.PR_URL }}
        run: |
          gh pr comment "$PR_URL" --body "@codex review"
